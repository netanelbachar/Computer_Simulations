
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt




#                                                      Harmonic Oscillator 3 Fermions Re creating Barak's article
#bhw1.25
# wj_1p25 = np.array([112972.63583981787,  117720.93886400807,118717.85161879819, 115192.1142230634,125756.85208542869])
# etot_f_1p25_array = np.array([6.917397164559292, 6.935955205243089,6.892726323388188, 6.965293944217862, 6.8038274590554195])
# sign_avg_1p25 = np.array([0.152665724107862, 0.15908234981622713, 0.16042952921459214, 0.15566501922035594, 0.16994169200733608])
# #bhw1.5
# wj_1p5 = np.array([62805.32736347416, 63451.087888912254,65012.87271373798,  67291.74204346964, 64242.279314644125])
# etot_f_1p5_array = np.array([6.4566064408197095, 6.452530450469957, 6.334465776710926, 6.31658790472761, 6.362632255608484])
# sign_avg_1p5 = np.array([0.08487206400469481,  0.08574471336339494,  0.08785523339694322, 0.09093478654522924, 0.0868138909657353])
# #bhw1.75
# wj_1p75 = np.array([ 40054.281755032374, 39052.8282878969, 33817.84457254546, 39064.10674372506,  34820.62663806022])
# etot_f_1p75_array = np.array([5.973790662082808, 5.826473291662583, 6.195400586017178, 5.948898113344316, 6.13109881947882])
# sign_avg_1p75 = np.array([0.05412740777707078, 0.05277409228094175, 0.045699789962899265, 0.0527893334374663,  0.04705490086224354])
# #bhw2
# wj_2 = np.array([16997.20435468659,25199.035401843823, 18571.19735856291, 26105.963743996865,  20778.811768431075])
# etot_f_2_array = np.array([6.264032185310658, 5.188877473066963,  5.930085107873297, 5.284286838386023,5.62762867611058])
# sign_avg_2 = np.array([ 0.022969195073900796, 0.034052750543032195, 0.025096212646706636,  0.03527832938377955, 0.028079475362744695])
# #bhw2.5
# wj_2p5 = np.array([5671.401659373476,  5802.093433770617, 7718.613276236949, 2713.267116107566, 7497.544302199108])
# etot_f_2p5_array = np.array([5.52155457455794, 5.450467678932403, 5.336345227914472, 8.849354668036758, 5.444494772734039])
# sign_avg_2p5 = np.array([0.007664056296450643, 0.007840666802392725, 0.010430558481401283, 0.003666577183929143, 0.01013181662459339])


# e1p25, s_e1p25 = statistical_error_estimation(etot_f_1p25_array, wj_1p25)
# e1p5, s_e1p5 = statistical_error_estimation(etot_f_1p5_array, wj_1p5)
# e1p75, s_e1p75 = statistical_error_estimation(etot_f_1p75_array, wj_2)
# e2, s_e2 = statistical_error_estimation(etot_f_2_array, wj_2p5)
# e2p5, s_e2p5 = statistical_error_estimation(etot_f_2p5_array, wj_2p5)
#
# print (" EF 1.25 : ", e1p25, "+-", s_e1p25, "Average Sign: ", np.mean(sign_avg_1p25))
# print (" EF 1.5 : ", e1p5, "+-", s_e1p5, "Average Sign: ", np.mean(sign_avg_1p5))
# print (" EF 1.75 : ", e1p75, "+-", s_e1p75, "Average Sign: ", np.mean(sign_avg_1p75))
# print (" EF 2 : ", e2, "+-", s_e2, "Average Sign: ", np.mean(sign_avg_2))
# print (" EF 2.5 : ", e2p5, "+-", s_e2p5, "Average Sign: ", np.mean(sign_avg_2p5))

# sign_avg_5_v2 = np.array([0.15955686287327467, 0.08724413765519949, 0.05048910486412432, 0.029095192602032777, 0.007946735077753436])
# etot_f_array_5_v2 = np.array([6.901289992143137, 6.383315530057243, 6.001863829786661, 5.711517982801404, 5.746343105765936])
# stdv_f_array_5_v2 = np.array([ 0.02798230127157498, 0.029509423362973766, 0.06765394958776051, 0.20068033218394465, 0.5243678741776379])


# #                                        ### Results for bhw = {3,4,5,6} ### Auxiliary System and Bogoliubov
# #bhw 3
# wj_3 = np.array([210179.69841260064, 186340.4676443407, 214156.85286651447, 202745.3923408178, 183889.5709145156])
# etot_f_3_a_array = np.array([5.676665039035755, 5.73894462216504, 5.67749452897188, 5.679713511596643, 5.74238485776892])
# etot_f_3_b_array = np.array([ 5.389211482099073, 5.490512228800897, 5.388626157302511, 5.397179314618179, 5.495640584095652])
# sign_avg_3 = np.array([0.28402661947648733, 0.2518114427626226, 0.28940115252231685,  0.27398025992002406, 0.24849942015475082])
# #bhw 4
# wj_4 = np.array([106671.96314013997,  117633.70752232579, 78484.9801121742, 88768.0113509952, 118105.13525125648])
# etot_f_4_a_array = np.array([ 5.53855726453117, 5.526302180922462, 5.582446913479353, 5.64284840000231, 5.458091254989383])
# etot_f_4_b_array = np.array([5.284160291250553, 5.24898460293902, 5.401602936622411, 5.466348607052258, 5.155758771671491])
# sign_avg_4 = np.array([0.1441513015407297, 0.15896446962476457, 0.10606078393537055, 0.11995677209593947,  0.15960153412331957])
# #bhw 5
# wj_5 = np.array([44122.838034229,  75777.74761646445, 68438.55882523858,  33880.994204338, 57116.618523355195])
# etot_f_5_a_array = np.array([5.625435563227563, 5.401215417275321,  5.423976537245733,  5.712241757921403, 5.565963202807589])
# etot_f_5_b_array = np.array([5.49272222715513, 5.096378662281641, 5.147683672021253, 5.706509914594888, 5.3771345832621])
# sign_avg_5 = np.array([0.05962545680301216, 0.10240236164387087, 0.09248453895302511,  0.04578512730315946, 0.07718461962615566])
# #bhw6
# wj_6 = np.array([58027.95243880652, 36678.60076096677, 50731.039931807616, 24583.041335912665, 54736.85312759831])
# etot_f_6_a_array = np.array([5.228695897890105, 5.303919360383117, 5.310094919290211, 5.680533542923004, 5.279701226384555])
# etot_f_6_b_array = np.array([4.851098427783117, 5.021674568241954, 4.955007712997802, 5.5697205667651755,  4.929077550228486])
# sign_avg_6 = np.array([0.07841615194433313, 0.04956567670400915,  0.06855545936730759,  0.03322032612961171,  0.07396872044270042])


# e3a, s_e3a = statistical_error_estimation(etot_f_3_a_array, wj_3)
# e4a, s_e4a = statistical_error_estimation(etot_f_4_a_array, wj_4)
# e5a, s_e5a = statistical_error_estimation(etot_f_5_a_array, wj_5)
# e6a, s_e6a = statistical_error_estimation(etot_f_6_a_array, wj_6)

# e3b, s_e3b = statistical_error_estimation(etot_f_3_b_array, wj_3)
# e4b, s_e4b = statistical_error_estimation(etot_f_4_b_array, wj_4)
# e5b, s_e5b = statistical_error_estimation(etot_f_5_b_array, wj_5)
# e6b, s_e6b = statistical_error_estimation(etot_f_6_b_array, wj_6)
#
#
# print (" EF 3 aux: ", e3a, "+-", s_e3a, "Average Sign: ", np.mean(sign_avg_3))
# print (" EF 4 aux: ", e4a, "+-", s_e4a, "Average Sign: ", np.mean(sign_avg_4))
# print (" EF 5 aux: ", e5a, "+-", s_e5a, "Average Sign: ", np.mean(sign_avg_5))
# print (" EF 6 aux: ", e6a, "+-", s_e6a, "Average Sign: ", np.mean(sign_avg_6))
#
# print (" EF 3 bogo: ", e3b, "+-", s_e3b, "Average Sign: ", np.mean(sign_avg_3))
# print (" EF 4 bogo: ", e4b, "+-", s_e4b, "Average Sign: ", np.mean(sign_avg_4))
# print (" EF 5 bogo: ", e5b, "+-", s_e5b, "Average Sign: ", np.mean(sign_avg_5))
# print (" EF 6 bogo: ", e6b, "+-", s_e6b, "Average Sign: ", np.mean(sign_avg_6))


# Final Results gaussian and Bogo
# sign_avg_a_b = np.array([0.2695437789672403, 0.13774697226402477, 0.07549642086584465, 0.0607452669175924])
# etot_f_array_a = np.array([5.701217136142354, 5.54200529256501, 5.513619834831573, 5.321186534155975])
# stdv_f_array_a = np.array([0.015204454921370483, 0.030931047708318646, 0.05903119391470891, 0.06799140877377802])
# etot_f_array_b = np.array([5.429256845174638, 5.296103954378438, 5.302963455074144, 4.999979651410427])
# stdv_f_array_b = np.array([0.024631012170872546, 0.05529193843597514, 0.10986761924841078, 0.10866600443487313])


#                                                   ############ Barak Data ##############

# #bhw1.25
# wj_1p25_barak = np.array([103264.19756, 101075.215348, 101163.337928, 102849.908, 102390.9363])
# etot_f_1p25_array_barak = np.array([6.91262412, 6.940551, 6.9571200, 6.91561865, 6.96245745])
# sign_avg_1p25_barak = [0.158873, 0.15550595, 0.1556294, 0.15823888, 0.157520]
# #bhw1.5
# wj_1p5_barak = np.array([57812.3495, 58005.62921257, 57173.91370, 58093.27251, 57899.4352763])
# etot_f_1p5_array_barak = np.array([6.42738909, 6.4094888, 6.44295, 6.40783615, 6.387069032])
# sign_avg_1p5_barak = [0.0889360, 0.089240, 0.087956, 0.089373, 0.0890702]
# #bhw1.75
# wj_1p75_barak = np.array([29442.8146,29441.3204, 31422.4637, 31655.970031, 33391.6106127])
# etot_f_1p75_array_barak = np.array([6.22525393, 6.1482325, 6.1021057, 6.01349610, 5.909392])
# sign_avg_1p75_barak = [0.04529363,0.045295148, 0.048347,0.0486994, 0.051378489]
# #bhw2
# wj_2_barak = np.array([15657.3754801, 18275.584461, 15986.0143289, 17739.5295075, 18435.9103375])
# etot_f_2_array_barak = np.array([6.12199098, 5.8776883, 6.09188909, 5.74251589, 5.72096018])
# sign_avg_2_barak = [0.02408663, 0.0281190291, 0.024596491, 0.02728800, 0.02836]
# #bhw2.5
# wj_2p5_barak = np.array([6002.020729958988, 5643.323090707206,  4485.547580785226, 2915.760388031396, 7095.686301233578])
# etot_f_2p5_array_barak = np.array([5.385968571985375, 5.5266261470974625, 6.069622557267915, 7.493737880005943, 4.873965362086076])
# sign_avg_2p5_barak = [0.00922770815, 0.0086894861, 0.006901265, 0.004491869, 0.0109132339]
#bhw3
# wj_3_barak = np.array([184977.3512652572, 184831.61767780365, 157468.9732848415, 185986.329866, 151628.11917911714])
# etot_f_3_array_barak = np.array([5.705093350017439, 5.707361641287298, 5.743720552496348, 5.660455943308668, 5.82292526590855])
# etot_f_3_b_array_barak = np.array([5.425065181519711, 5.427592692469738, 5.503536808428315, 5.366310768137761, 5.609377151825126])
# sign_avg_3_barak = [0.2845750381907103, 0.284363136987,0.242257207287930, 0.286142708, 0.233271209729]
# #bhw4
# wj_4_barak = np.array([85245.914543502, 89021.0652735, 81207.909253, 106117.4592])
# etot_f_4_array_barak = np.array([5.50345780765321, 5.542641647, 5.59843929, 5.34207670])
# etot_f_4_b_array_barak = np.array([5.228242500321395, 5.274927883133727, 5.37716132542558, 4.986157474854112])
# sign_avg_4_barak = [0.14208271154, 0.1483646660, 0.135355980, 0.17686890]
# #bhw5
# wj_5_barak = np.array([75218.23284305, 36657.1608508, 46238.832556, 87446.944005])
# etot_f_5_array_barak = np.array([5.324355655, 5.677672714, 5.55642997736, 5.32250848731])
# etot_f_5_b_array_barak = np.array([4.9684559540727395, 5.577212066942779, 5.358394684427098, 4.945394127832235])
# sign_avg_5_barak = [0.1157166338038, 0.056403758, 0.07114490724, 0.1345301797]
# #bhw6
# wj_6_barak = np.array([34339.488792, 34339.355887, 30027.815102, 22171.530207, 32965.38598])
# etot_f_6_array_barak = np.array([5.32455984926, 5.3287294439, 5.2844063732, 5.3733643311, 5.3366618738])
# etot_f_6_b_array_barak = np.array([4.985349961211481, 4.977775178400739,4.962442924998586, 5.1197110458640225, 5.04260569003804])
# sign_avg_6_barak = [0.0686894870, 0.0472559, 0.060066226, 0.044333521, 0.040470853]
#
# # Barak results for 3 fermions - Harmonic potential and Auxiliary.
# # 5 is for first "5" points and "g" for last 4 points in fig6
# etot_f_array_5_barak = [6.93755744, 6.4148657, 6.074709, 5.9004776433, 5.6297522]
# stdv_f_array_5_barak = [0.01030199, 0.0094601, 0.05510046, 0.083725350, 0.40240035]
# sign_f_array_5_barak = [0.15715344, 0.08891504, 0.047802733, 0.026490030, 0.00804471243]
# etot_f_array_g_a_barak = [5.723669675071802, 5.48707494, 5.4201400039, 5.32728000]
# stdv_f_array_g_a_barak = [0.02653834, 0.0575122, 0.086961, 0.013275099]
# etot_f_array_g_b_barak = [ 5.459570480041557, 5.202135535081834, 5.124542912530602, 5.010820551140615]
# stdv_f_array_g_b_barak = [0.040907328079425515, 0.08633141649033521, 0.15185797821596392, 0.026682192651536943]
# sign_f_array_g_a_barak = [0.26612186003, 0.1506680643, 0.09444886968, 0.0521631974]
# # Unitl here barak resuls
#
# e3b_barak, s_e3b_barak = statistical_error_estimation(etot_f_3_b_array_barak, wj_3_barak)
# e4b_barak, s_e4b_barak = statistical_error_estimation(etot_f_4_b_array_barak, wj_4_barak)
# e5b_barak, s_e5b_barak = statistical_error_estimation(etot_f_5_b_array_barak, wj_5_barak)
# e6b_barak, s_e6b_barak = statistical_error_estimation(etot_f_6_b_array_barak, wj_6_barak)


# print (" EF 3 bogo: ", e3b_barak, "+-", s_e3b_barak)
# print (" EF 4 bogo: ", e4b_barak, "+-", s_e4b_barak)
# print (" EF 5 bogo: ", e5b_barak, "+-", s_e5b_barak)
# print (" EF 6 bogo: ", e6b_barak, "+-", s_e6b_barak)
#
# #      Plot of the Fermionic Energy as well as the Average Sign to replicate Fig6
# fig, (ax1, ax2) = plt.subplots(2)
# q = np.linspace(0.8, 11, 1000)
# p = ana_3_fermions(q, 1)
# ax1.plot(q, p, 'g',  label="Analytical Result")
# ax1.errorbar(bhw, etot_f_array_5_v2, yerr=stdv_f_array_5_v2, fmt='^', color='orange', label='H_original')
# ax1.errorbar(bhw_g, etot_f_array_a, yerr=stdv_f_array_a, fmt='H', color='grey', label='H_aux')
# ax1.errorbar(bhw, etot_f_array_5_barak, yerr=stdv_f_array_5_barak, fmt='x', color='green', label='Baraks results')
# ax1.errorbar(bhw_g, etot_f_array_b, yerr=stdv_f_array_b, fmt='X', color='purple', label='Bogoliubov')
# ax1.errorbar(bhw_g, etot_f_array_g_barak, yerr=stdv_f_array_g_barak, fmt='x', color='green')
# ax1.set_ylabel('<E>_F')
# ax1.set_ylim([1, 8])
# ax1.set_xlim([1, 6.2])
# ax2.plot(bhw, sign_avg_5_v2, 'D', color='red')
# ax2.plot(bhw, sign_f_array_5_barak, 'D', color='green')
# ax2.plot(bhw_g, sign_avg_a_b, 'D',  color='red', label='<s>_B')
# ax2.plot(bhw_g, sign_f_array_g_barak, 'D',  color='green', label='Baraks - <s>_B')
# ax2.set_ylabel('<S>_B')
# ax2.set_xlabel('bhw')
# ax2.set_ylim([-0.01, 0.28])
# ax2.set_xlim([1, 6.2])
# ax1.legend()
# ax2.legend()
# plt.show()



### Results to KEEP JUST IN CASE
# #                                     ### Results for bhw = {3,4,5,6} ### Auxiliary System and Bogoliubov
# #bhw 3
# wj_3 = np.array([210004.8593726606, 186185.55305947014, 213982.27978131443, 202573.24525250704, 183733.2605096042])
# etot_f_3_a_array = np.array([5.676597176932612, 5.739254266235507, 5.678254283657318, 5.679397044460362, 5.742916118912327])
# etot_f_3_b_array = np.array([5.383706690956485, 5.48518149484957, 5.384307947084825, 5.391548967415173, 5.490810443012252])
# sign_avg_3 = np.array([0.2837903505035954, 0.2516020987290137, 0.2891652429477222, 0.2737476287196041, 0.24828818987784354])
# #bhw 4
# wj_4 = np.array([106580.16795465646, 117527.41639917549, 78411.4400749824, 88679.25590672411, 118002.68890790107])
# etot_f_4_a_array = np.array([5.539805274644795, 5.524756050228152, 5.5854505238310885, 5.6412809860425135, 5.455452642488769])
# etot_f_4_b_array = np.array([5.278729613216011, 5.239719413476682, 5.39723880811313, 5.457426175882458, 5.1456864815264])
# sign_avg_4 = np.array([0.144027253992779, 0.15882083297185878, 0.10596140550673297, 0.11983683230638394, 0.15946309311878523])
# #bhw 5
# wj_5 = np.array([44076.777059272594, 75709.22267712229, 68376.33525409011, 33845.90619840927, 57058.63030484316])
# etot_f_5_a_array = np.array([ 5.634939395614105, 5.40020354085211, 5.428324918794425, 5.715037549546594, 5.561358368004263])
# etot_f_5_b_array = np.array([5.495353844147165, 5.086822357472333, 5.14568998659368, 5.697222685235016, 5.36024423474])
# sign_avg_5 = np.array([0.059563212242260265, 0.10230976037448958, 0.09240045304606771, 0.045737711078931445,  0.07710625716870698])
# #bhw6
# wj_6 = np.array([57984.19628909118, 36641.15233128122, 50682.70690898466, 24550.539287341282, 54689.07166212774])
# etot_f_6_a_array = np.array([5.227673814242167, 5.302847477041122, 5.308631963219681, 5.674839387092791, 5.2778622640190616])
# etot_f_6_b_array = np.array([4.842119677836193, 5.007890288326537, 4.94528093720046, 5.546773077706502, 4.917727469932478])
# sign_avg_6 = np.array([0.07835702201228538, 0.0495150707179476, 0.0684901444716009, 0.033176404442353084, 0.07390415089476722])
#
#
# # Final Results gaussian and Bogo
# sign_avg_a_b = np.array([0.26931870215555576, 0.137621883579308, 0.07542347878209119, 0.060688558507790834])
# etot_f_array_a = np.array([5.701457314550066, 5.5414850955346395, 5.515302665885774, 5.3193271535079045])
# stdv_f_array_a = np.array([0.015272990105292414, 0.03133796446517137, 0.05964174674504432, 0.06728098590472299])
# etot_f_array_b = np.array([5.424137999200333, 5.288264040424372, 5.2957061054480885, 4.987910812140755])
# stdv_f_array_b = np.array([0.024639556703329606,  0.05579659762332275, 0.10987127588158654, 0.10653525451071216])

### Results to KEEP JUST IN CASE until here

